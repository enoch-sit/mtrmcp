server {
    listen 80;
    server_name localhost;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Client max body size
    client_max_body_size 100M;

    # Route all /mcp requests to the MCP FastAPI server
    location /mcp/ {
        proxy_pass http://mtr-mcp-server:8000/mcp/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # Special handling for SSE (Server-Sent Events)
        proxy_buffering off;
        proxy_cache off;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_send_timeout 300s;
        
        # Handle WebSocket upgrades if needed
        proxy_set_header Connection "upgrade";
    }

    # Optional: Handle /mcp without trailing slash
    location = /mcp {
        return 301 $scheme://$server_name/mcp/;
    }

    # Default route - could serve other applications
    location / {
        # Default response when / is accessed
        return 200 '<!DOCTYPE html>
<html>
<head>
    <title>MTR MCP Server</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; }
        .container { max-width: 800px; margin: 0 auto; }
        .endpoint { background: #f4f4f4; padding: 10px; margin: 10px 0; border-radius: 5px; }
    </style>
</head>
<body>
    <div class="container">
        <h1>ðŸš‡ MTR MCP Server</h1>
        <p>Hong Kong MTR train schedule Model Context Protocol server</p>
        
        <h2>Available Endpoints:</h2>
        <div class="endpoint"><strong>MCP Service Root:</strong> <a href="/mcp/">/mcp/</a></div>
        <div class="endpoint"><strong>Health Check:</strong> <a href="/mcp/health">/mcp/health</a></div>
        <div class="endpoint"><strong>SSE Endpoint:</strong> <a href="/mcp/sse">/mcp/sse</a></div>
        <div class="endpoint"><strong>API Documentation:</strong> <a href="/mcp/docs">/mcp/docs</a></div>
        <div class="endpoint"><strong>MCP Info:</strong> <a href="/mcp/info">/mcp/info</a></div>
        
        <h3>ðŸ”§ MCP Inspector Setup:</h3>
        <p>Use SSE URL: <code>http://localhost/mcp/sse</code></p>
        
        <h3>ðŸ“¡ Available Tools:</h3>
        <ul>
            <li>get_next_train_schedule - Get next train schedule for MTR stations</li>
            <li>get_next_train_structured - Get structured next train information</li>
        </ul>
        
        <h3>ðŸ“š Available Resources:</h3>
        <ul>
            <li>mtr://stations/list - List of all MTR stations</li>
            <li>mtr://lines/map - MTR system lines and connections</li>
        </ul>
    </div>
</body>
</html>';
        add_header Content-Type text/html;
    }

    # Health check endpoint
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# WebSocket upgrade map
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}